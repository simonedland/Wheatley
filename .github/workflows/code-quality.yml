name: Python Code Quality Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  issues: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run flake8
        id: flake8
        run: |
          flake8 . --exit-zero --ignore=E501 --format='::error file=%(path)s,line=%(row)d,col=%(col)d::%(code)s %(text)s' > flake8-report.txt
          cat flake8-report.txt
          issues=$(grep -c '^::error' flake8-report.txt || true)
          echo "issue_count=$issues" >> $GITHUB_OUTPUT

      - name: Create GitHub Issue if Problems Found
        if: steps.flake8.outputs.issue_count > 0 && github.event_name == 'push'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="Code quality issues detected in commit ${{ github.sha }}"

          # Truncate the report to 100 lines to avoid excessively long issues
          head -n 100 flake8-report.txt > limited-flake8-report.txt

          # Build issue body
          {
            echo "### ðŸš¨ flake8 identified issues (showing first 100 lines):"
            echo '```'
            cat limited-flake8-report.txt
            echo '```'
            echo "Full log is available in the workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            echo "Commit: ${{ github.sha }}"
          } > issue_body.md

          # Create GitHub issue using the issue_body.md file
          gh issue create --title "$ISSUE_TITLE" --body-file issue_body.md
